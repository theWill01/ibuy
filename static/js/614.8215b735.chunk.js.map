{"version":3,"file":"static/js/614.8215b735.chunk.js","mappings":"uNAuGA,UAzFA,WACE,IA0BIA,EAzBEC,GADSC,EAAAA,EAAAA,MACUC,MACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAG3B,GAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAAoCF,EAAAA,EAAAA,UAAS,GAAE,eAAxCG,EAAU,KAAEC,EAAa,KAChC,GAAkCJ,EAAAA,EAAAA,UAAS,GAAE,eAAtCK,EAAS,KAAEC,EAAY,KAkB9B,QAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYL,EANC,EAOnBD,EAAgBT,EAASgB,MAAMN,EAAYK,IAC3CF,EAAaI,KAAKC,KAAKlB,EAASmB,OARb,IASJ,SAAXd,GACFP,GAASsB,EAAAA,EAAAA,IAAczB,GAE3B,GAAG,CAACU,EAAQP,EAAUH,EAAWe,EAAYV,IASrCK,GACN,IAAK,UACHX,GAAM,8BAAE,eAER,MACF,IAAK,UACHA,EACEc,GACAA,EAAaa,KAAI,SAACC,EAAMC,GAAK,OAC3B,SAAC,IAAe,CAACD,KAAMA,EAAM3B,UAAWA,GAAgB4B,EAAS,IAGrE,MAEF,IAAK,SACH7B,GAAM,0BAAI,gCAA8BS,KAQ5C,OACE,qBAASqB,UAAU,yCAAwC,WACzD,oBAASA,UAAU,sDAAqD,UACtE,SAAC,IAAO,OAEV,qBAASA,UAAU,6EAA4E,UAC5F,KACD,iBAAKA,UAAU,uCAAsC,WACnD,eAAIA,UAAU,oCAAmC,SAAC,aAClD,eAAIA,UAAU,gBAAe,UAC3B,8BAAS7B,EAAU8B,cAAc,iBAEnC,gBAAKD,UAAU,4CAA2C,SAAE9B,QAE9D,gBAAK8B,UAAU,+BAA8B,UAC3C,SAAC,IAAa,CACZE,WAAW,MACXC,UAAU,QACVC,aAhDc,SAACC,GACvB,IAAMC,EAfa,EAeAD,EAAEE,SAA2B/B,EAASmB,OACzDR,EAAcmB,EAChB,EA8CUE,mBAAoB,EACpBpB,UAAWA,EACXqB,cAAc,OACdC,sBAAuB,KACvBC,mBAAmB,aACnBC,kBAAkB,WAClBC,oBAAoB,SACpBC,gBAAgB,SAChBC,cAAc,eACdC,kBAAkB,OAClBC,cAAc,gBAM1B,C","sources":["components/brand/BrandList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport \"../../styles/Pagination.scss\";\nimport {\n  allPosts,\n  filterByBrand,\n  productsError,\n  productsStatus,\n} from \"../../features/posts/PostsSlice\";\nimport PaginationItems from \"../pagination/PaginationItems\";\nimport SideBar from \"../sidebar/Sidebar\";\n\nfunction BrandList() {\n  const params = useParams();\n  const filterKey = params.brand;\n  const dispatch = useDispatch();\n  const products = useSelector(allPosts);\n  const error = useSelector(productsError);\n  const status = useSelector(productsStatus);\n\n  const itemsPerPage = 8;\n  const [currentItems, setCurrentItems] = useState([]);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n\n  useEffect(() => {\n    const endOffset = itemOffset + itemsPerPage;\n    setCurrentItems(products.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(products.length / itemsPerPage));\n    if (status === \"idle\") {\n      dispatch(filterByBrand(filterKey));\n    }\n  }, [status, dispatch, filterKey, itemOffset, products]);\n\n  const handlePageClick = (e) => {\n    const newOffset = (e.selected * itemsPerPage) % products.length;\n    setItemOffset(newOffset);\n  };\n\n  let box;\n\n  switch (status) {\n    case \"loading\":\n      box = <>Loading...</>;\n\n      break;\n    case \"success\":\n      box =\n        currentItems &&\n        currentItems.map((item, index) => (\n          <PaginationItems item={item} filterKey={filterKey} key={index} />\n        ));\n\n      break;\n\n    case \"failed\":\n      box = <h1>OOOPS something went wrong : {error}</h1>;\n      break;\n\n    default:\n    case \"idle\":\n      break;\n  }\n\n  return (\n    <section className=\"category-container w-100 h-[100%] flex\">\n      <article className=\"w-[30%] h-full border border-black hidden sm:block \">\n        <SideBar />\n      </article>\n      <article className=\"w-full h-full sm:w-[80%] flex flex-col justify-between border border-black\">\n        {\" \"}\n        <div className=\"w-[100%] h-[95%] border border-black\">\n          <h1 className=\"text-[0.9rem] font-bold underline\">RESULTS</h1>\n          <h1 className=\"text-[0.9rem]\">\n            <strong>{filterKey.toUpperCase()} Devices</strong>\n          </h1>\n          <div className=\"flex flex-start flex-wrap overflow-hidden\">{box}</div>\n        </div>\n        <div className=\"border border-red-500 w-full\">\n          <ReactPaginate\n            breakLabel=\"...\"\n            nextLabel=\"next \"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={3}\n            pageCount={pageCount}\n            previousLabel=\"prev\"\n            renderOnZeroPageCount={null}\n            containerClassName=\"pagination\"\n            pageLinkClassName=\"page-num\"\n            activeLinkClassName=\"active\"\n            activeClassName=\"active\"\n            pageClassName=\"page-num-box\"\n            previousClassName=\"prev\"\n            nextClassName=\"next\"\n          />\n        </div>\n      </article>\n    </section>\n  );\n}\n\nexport default BrandList;\n"],"names":["box","filterKey","useParams","brand","dispatch","useDispatch","products","useSelector","allPosts","error","productsError","status","productsStatus","useState","currentItems","setCurrentItems","itemOffset","setItemOffset","pageCount","setPageCount","useEffect","endOffset","slice","Math","ceil","length","filterByBrand","map","item","index","className","toUpperCase","breakLabel","nextLabel","onPageChange","e","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageLinkClassName","activeLinkClassName","activeClassName","pageClassName","previousClassName","nextClassName"],"sourceRoot":""}