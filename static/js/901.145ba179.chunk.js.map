{"version":3,"file":"static/js/901.145ba179.chunk.js","mappings":"4QAgBe,SAASA,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,EAAYJ,EAAOK,KAEnBC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IAE7B,GAAoCC,EAAAA,EAAAA,UAAS,GAAE,eAAxCC,EAAU,KAAEC,EAAa,KAChC,GAAkCF,EAAAA,EAAAA,UAAS,GAAE,eAAtCG,EAAS,KAAEC,EAAY,KAExBC,EAAYJ,EAJG,EAKfK,EAAeR,EAASS,MAAMN,EAAYI,GAC1CG,EAAcV,EAASW,QAC7BC,EAAAA,EAAAA,YAAU,WACRN,EAAaO,KAAKC,KAAKJ,EARJ,IASJ,SAAXb,GACFJ,GAASsB,EAAAA,EAAAA,IAAWpB,GAExB,GAAG,CAACF,EAAUI,EAAQF,EAAWe,IAEjC,IAQMM,EACJR,GACAA,EAAaS,KAAI,SAACC,EAAMC,GAAK,OAC3B,SAAC,IAAe,CAACD,KAAMA,EAAkBvB,UAAWA,GAAlBwB,EAA+B,IAGrE,OACE,iBAAKC,UAAU,cAAa,WAC1B,oBAASA,UAAU,8CAA6C,UAC9D,SAAC,IAAO,OAEV,qBAASA,UAAU,sEAAqE,WACtF,4BACE,0BAAI,2BAAyBzB,MAC7B,oBAASyB,UAAU,wCAAuC,SACvDJ,QAGL,0BACE,SAAC,IAAa,CACZK,WAAW,MACXC,UAAU,OACVC,aA9Bc,SAACC,GACvB,IAAMC,EAfa,EAeAD,EAAEE,SAA2BhB,EAChDiB,QAAQC,IAAI,8BAAD,OACqBJ,EAAEE,SAAQ,6BAAqBD,IAE/DrB,EAAcqB,EAChB,EAyBUI,mBAAoB,EACpBxB,UAAWA,EACXyB,cAAc,OACdC,sBAAuB,KACvBC,mBAAmB,aACnBC,kBAAkB,WAClBC,oBAAoB,SACpBC,gBAAgB,SAChBC,cAAc,eACdC,kBAAkB,OAClBC,cAAc,gBAM1B,C","sources":["routes/Year.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport SideBar from \"../components/sidebar/Sidebar\";\nimport PaginationItems from \"../components/pagination/PaginationItems\";\nimport ReactPaginate from \"react-paginate\";\nimport {\n  allProducts,\n  productsStatus,\n  filterYear,\n  byYear,\n} from \"../features/products/ProductsSlice\";\nimport Pagination from \"../components/pagination/Pagination\";\nimport axiosInstance from \"../services/Axios\";\nimport \"../styles/Pagination.scss\";\n\nexport default function Year() {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const filterKey = params.year;\n\n  const status = useSelector(productsStatus);\n  const products = useSelector(byYear);\n  const itemsPerPage = 6;\n  const [itemOffset, setItemOffset] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n\n  const endOffset = itemOffset + itemsPerPage;\n  const currentItems = products.slice(itemOffset, endOffset);\n  const itemsLength = products.length;\n  useEffect(() => {\n    setPageCount(Math.ceil(itemsLength / itemsPerPage));\n    if (status === \"idle\") {\n      dispatch(filterYear(filterKey));\n    }\n  }, [dispatch, status, filterKey, itemsLength]);\n\n  const handlePageClick = (e) => {\n    const newOffset = (e.selected * itemsPerPage) % itemsLength;\n    console.log(\n      `user requested page number ${e.selected}, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n\n  const content =\n    currentItems &&\n    currentItems.map((item, index) => (\n      <PaginationItems item={item} key={index} filterKey={filterKey} />\n    ));\n\n  return (\n    <div className=\"flex h-full\">\n      <article className=\"w-[30%] border border-black hidden sm:block\">\n        <SideBar />\n      </article>\n      <article className=\"w-full sm:w-[70%] flex flex-col justify-between border border-black\">\n        <div>\n          <h1>See Devices released in {filterKey}</h1>\n          <article className=\"flex flex-wrap justify-start w-[100%]\">\n            {content}\n          </article>\n        </div>\n        <div>\n          <ReactPaginate\n            breakLabel=\"...\"\n            nextLabel=\"next\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={3}\n            pageCount={pageCount}\n            previousLabel=\"prev\"\n            renderOnZeroPageCount={null}\n            containerClassName=\"pagination\"\n            pageLinkClassName=\"page-num\"\n            activeLinkClassName=\"active\"\n            activeClassName=\"active\"\n            pageClassName=\"page-num-box\"\n            previousClassName=\"prev\"\n            nextClassName=\"next\"\n          />\n        </div>\n      </article>\n    </div>\n  );\n}\n"],"names":["Year","params","useParams","dispatch","useDispatch","filterKey","year","status","useSelector","productsStatus","products","byYear","useState","itemOffset","setItemOffset","pageCount","setPageCount","endOffset","currentItems","slice","itemsLength","length","useEffect","Math","ceil","filterYear","content","map","item","index","className","breakLabel","nextLabel","onPageChange","e","newOffset","selected","console","log","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageLinkClassName","activeLinkClassName","activeClassName","pageClassName","previousClassName","nextClassName"],"sourceRoot":""}