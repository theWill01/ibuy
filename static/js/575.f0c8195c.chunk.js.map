{"version":3,"file":"static/js/575.f0c8195c.chunk.js","mappings":"iRAce,SAASA,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MACTC,EAAWC,OAAOH,EAAOE,UACzBE,EAAWD,OAAOH,EAAOI,UAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAEtB,GAAoCF,EAAAA,EAAAA,UAAS,GAAE,eAAxCG,EAAU,KAAEC,EAAa,KAChC,GAAkCJ,EAAAA,EAAAA,UAAS,GAAE,eAAtCK,EAAS,KAAEC,EAAY,KAExBC,GAAWC,EAAAA,EAAAA,cAAW,uBAAC,kHAEFC,EAAAA,EAAAA,IAAkB,sBAAD,OAChBZ,EAAQ,sBAAcE,IAC5C,KAAD,EAFKW,EAAQ,OAGdR,EAASQ,EAASC,MAAM,yEAEjB,KAAMC,SAAO,yDAErB,CAACf,EAAUE,IAERc,EAAYV,EAfG,EAgBfW,EAAeb,EAAMc,MAAMZ,EAAYU,IAE7CG,EAAAA,EAAAA,YAAU,WAER,OADAT,IACO,WACLD,EAAaW,KAAKC,KAAKjB,EAAMkB,OArBZ,GAsBnB,CACF,GAAG,CAACZ,EAAUN,EAAMkB,SAEpB,IAQMC,EACJN,GACAA,EAAaO,KAAI,SAACC,EAAMC,GAAK,OAC3B,SAAC,IAAe,CAACD,KAAMA,GAAWC,EAAS,IAG/C,OACE,qBAASC,UAAU,eAAc,UAC9B,KACD,oBAASA,UAAU,8CAA6C,UAC9D,SAAC,IAAO,OAEV,qBAASA,UAAU,kDAAiD,WAClE,4BACE,6BACE,gBAAIA,UAAU,iBAAgB,UAAC,SACxB,8BAAQ,KAAG3B,KAAkB,QAAI,8BAAQ,IAAEE,SAElD,sBAGF,oBAASyB,UAAU,+BAA8B,SAAEJ,QAErD,0BACE,SAAC,IAAa,CACZK,WAAW,MACXC,UAAU,OACVC,aAnCc,SAACC,GACvB,IAAMC,EA1Ba,EA0BAD,EAAEE,SAA2BvB,EAASY,OACzDY,QAAQC,IAAI,8BAAD,OACqBJ,EAAEE,SAAQ,6BAAqBD,IAE/DzB,EAAcyB,EAChB,EA8BUI,mBAAoB,EACpB5B,UAAWA,EACX6B,cAAc,OACdC,sBAAuB,KACvBC,mBAAmB,aACnBC,kBAAkB,WAClBC,oBAAoB,SACpBC,gBAAgB,SAChBC,cAAc,eACdC,kBAAkB,OAClBC,cAAc,gBAM1B,C","sources":["components/brand/Price.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  allProducts,\n  fetchProducts,\n  filterByPrice,\n  productsStatus,\n} from \"../../features/products/ProductsSlice\";\nimport axiosInstance from \"../../services/Axios\";\nimport PaginationItems from \"../pagination/PaginationItems\";\nimport SideBar from \"../sidebar/Sidebar\";\nimport ReactPaginate from \"react-paginate\";\n\nexport default function Price() {\n  const params = useParams();\n  const minPrice = Number(params.minPrice);\n  const maxPrice = Number(params.maxPrice);\n  const [price, setPrice] = useState([]);\n  const itemsPerPage = 6;\n  const [itemOffset, setItemOffset] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n\n  const products = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get(\n        `products?price_gte=${minPrice}&price_lte=${maxPrice}`\n      );\n      setPrice(response.data);\n    } catch (error) {\n      return error.message;\n    }\n  }, [minPrice, maxPrice]);\n\n  const endOffset = itemOffset + itemsPerPage;\n  const currentItems = price.slice(itemOffset, endOffset);\n\n  useEffect(() => {\n    products();\n    return () => {\n      setPageCount(Math.ceil(price.length / itemsPerPage));\n    };\n  }, [products, price.length]);\n\n  const handlePageClick = (e) => {\n    const newOffset = (e.selected * itemsPerPage) % products.length;\n    console.log(\n      `user requested page number ${e.selected}, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n\n  const content =\n    currentItems &&\n    currentItems.map((item, index) => (\n      <PaginationItems item={item} key={index} />\n    ));\n\n  return (\n    <section className=\"w-[99%] flex\">\n      {\" \"}\n      <article className=\"w-[30%] border border-black hidden sm:block\">\n        <SideBar />\n      </article>\n      <article className=\"w-full sm:w-[70%] flex flex-col justify-between\">\n        <div>\n          <span>\n            <h1 className=\"text-[0.99rem]\">\n              from <strong> ${minPrice}</strong> to <strong>${maxPrice}</strong>\n            </h1>\n            <hr />\n          </span>\n\n          <article className=\"flex flex-wrap justify-start\">{content}</article>\n        </div>\n        <div>\n          <ReactPaginate\n            breakLabel=\"...\"\n            nextLabel=\"next\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={3}\n            pageCount={pageCount}\n            previousLabel=\"prev\"\n            renderOnZeroPageCount={null}\n            containerClassName=\"pagination\"\n            pageLinkClassName=\"page-num\"\n            activeLinkClassName=\"active\"\n            activeClassName=\"active\"\n            pageClassName=\"page-num-box\"\n            previousClassName=\"prev\"\n            nextClassName=\"next\"\n          />\n        </div>\n      </article>\n    </section>\n  );\n}\n"],"names":["Price","params","useParams","minPrice","Number","maxPrice","useState","price","setPrice","itemOffset","setItemOffset","pageCount","setPageCount","products","useCallback","axiosInstance","response","data","message","endOffset","currentItems","slice","useEffect","Math","ceil","length","content","map","item","index","className","breakLabel","nextLabel","onPageChange","e","newOffset","selected","console","log","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageLinkClassName","activeLinkClassName","activeClassName","pageClassName","previousClassName","nextClassName"],"sourceRoot":""}