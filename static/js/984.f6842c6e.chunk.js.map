{"version":3,"file":"static/js/984.f6842c6e.chunk.js","mappings":"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","sources":["components/FormErr.js","services/UploadService.js"],"sourcesContent":["import React from \"react\";\n\nexport const FormErr = (errors) => {\n  return (\n    <div>\n      {Object.keys(errors).map((name, idx) => {\n        if (errors[name].length > 0) {\n          return (\n            <p key={idx}>\n              {name} {errors[name]}\n            </p>\n          );\n        } else {\n          return \"\";\n        }\n      })}\n    </div>\n  );\n};\n","import React, {useState, useRef, useCallback, useMemo} from \"react\";\nimport \"../styles/UploadService.scss\";\nimport {FormErr} from \"../components/FormErr\";\nimport {useDispatch} from \"react-redux\";\nimport {addProducts} from \"../features/products/ProductsSlice\";\nimport {initialProducts} from \"../db/data\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction About(props) {\n    return !props.state ? (\"\") : (<p>\n        : {props.symbol} {props.state} {props.texts}\n    </p>);\n}\n\nexport default function UploadService() {\n    const dispatch = useDispatch();\n    const [requestStatus, setRequestStatus] = useState(\"idle\");\n    const [product, setProduct] = useState(initialProducts);\n    const [rating, setRating] = useState(0);\n    const [hover, setHover] = useState(0);\n    const [files, setFiles] = useState([]);\n\n    const stars = [...Array(5)].map((star, index) => {\n        const ratingValue = index + 1;\n        return (<label className=\"border border-black\" key={index}>\n            <input\n                type={\"radio\"}\n                style={{display: \"none\"}}\n                onClick={(c) => setRating(ratingValue)}\n                value={ratingValue}\n                name={\"rating\"}\n            />\n            <FontAwesomeIcon\n                icon={faStar}\n                className={\"cursor-pointer\"}\n                color={ratingValue <= (hover || rating) ? \"yellow\" : \"gray\"}\n                onMouseEnter={(c) => setHover(ratingValue)}\n                onMouseLeave={(c) => setHover(0)}\n            />\n        </label>);\n    });\n\n\n    const handleFile = (e) => {\n        if (!e.target.files && !e.target.files[0]) return;\n\n        const reader = new FileReader();\n        reader.onloadend = (e) => {\n            setFiles([...files, {image: e.target.result}]);\n\n            console.log(files);\n        };\n\n        reader.readAsDataURL(e.target.files[0]);\n\n        console.log(files.length);\n    };\n\n    const handleText = (e) => {\n        return setProduct({...product, [e.target.name]: e.target.value});\n    };\n\n    const canSave = [product].every(Boolean) && requestStatus === \"idle\";\n\n    const submit = async () => {\n        const fileArr = JSON.stringify(files);\n        const formData = new FormData();\n\n        formData.append(\"images\", fileArr);\n        formData.append(\"brand\", product.brand.toLowerCase());\n        formData.append(\"title\", product.title.toLowerCase());\n        formData.append(\"stars\", rating);\n        formData.append(\"color\", product.color.toLowerCase());\n        formData.append(\"software\", product.software.toLowerCase());\n        formData.append(\"year\", product.year);\n        formData.append(\"rom\", product.rom);\n        formData.append(\"ram\", product.ram);\n        formData.append(\"condition\", product.condition.toLowerCase());\n        formData.append(\"price\", product.price);\n        formData.append(\"quantity\", product.quantity);\n\n        if (!canSave) return <>Failed</>;\n\n        try {\n            dispatch(addProducts(formData)).unwrap();\n\n            setProduct({\n                ...product, initialProducts,\n            });\n            setRating(0);\n            setHover(0);\n\n        } catch (err) {\n            console.log(err);\n        } finally {\n            setRequestStatus(\"idle\");\n        }\n    };\n\n\n    return (<section className=\"w-full h-full border-black flex justify-between overflow-hidden \">\n\n        <article className=\"file-preview border border-red-600 w-2/4 h-full  hidden\">\n\n\n            <div className=\"product\">\n                <About state={product.brand}/>\n                <About state={product.title}/>\n                <About state={product.color}/>\n                <About state={product.software}/>\n                <About state={product.year}/>\n                <About state={product.rom} texts={\"gb\"}/>\n                <About state={product.ram} texts={\"gb\"}/>\n                <About state={product.condition}/>\n                <About symbol={\"$\"} state={product.price}/>\n                <About state={product.quantity} texts={\"pcs\"}/>\n            </div>\n        </article>\n        {/*IMAGE PREVIEW CONTAINER  */}\n\n        <div className={\"border border-black flex w-[30%] h-full overflow-hidden\"}>\n\n                        {files.map((item, idx) => {\n                            return (\n                                <figure className={\"w-[100px] h-[100px]\"} key={idx}>\n                                    <img className={\"object-contain w-[100px] h-[100px]\"} src={item.image} alt={item.title}/>\n                                </figure>\n                            )\n                        })}\n\n        </div>\n\n        <article\n            className=\"form-box border\n      border-black w-3/5\"\n        >\n            <form\n                onSubmit={submit}\n                encType={\"multipart/form-data\"}\n                className={\"post-form w-100 h-full \"}\n            >\n                <label>Select image file for upload</label>\n                <br/>\n                <input\n                    type={\"file\"}\n                    accept=\"image/*\"\n                    onChange={handleFile}\n                    value={product.images}\n                    multiple\n                />\n                <br/>\n                <label>enter phone manufacturer i.e samsung, iphone.....</label>\n                <br/>\n                <input\n                    placeholder=\"brand\"\n                    type={\"text\"}\n                    onChange={handleText}\n                    name={\"brand\"}\n                    value={product.brand}\n                />\n                <FormErr/>\n\n                <input\n                    placeholder=\"phone name\"\n                    type={\"text\"}\n                    onChange={handleText}\n                    name={\"title\"}\n                    value={product.title}\n                />\n                <label>{stars}</label>\n\n                <input\n                    placeholder={\"color\"}\n                    type={\"text\"}\n                    onChange={handleText}\n                    name={\"color\"}\n                    value={product.color}\n                />\n                <br/>\n\n                <label>software</label>\n                <br/>\n\n                <select\n                    name=\"software\"\n                    onChange={handleText}\n                    value={product.software}\n                >\n                    <option value={\"\"}></option>\n                    <option>android</option>\n                    <option>ios</option>\n                </select>\n\n                <input\n\n                    type={\"number\"}\n                    onChange={handleText}\n                    name={\"year\"}\n                    value={product.year}\n                    placeholder={\"item manufacture date\"}\n                />\n                <input\n\n                    type={\"number\"}\n                    onChange={handleText}\n                    name={\"rom\"}\n                    value={product.rom}\n                    placeholder={\"internal storage\"}\n                />\n                <input\n\n                    type={\"number\"}\n                    onChange={handleText}\n                    name={\"ram\"}\n                    value={product.ram}\n                    placeholder={\"ram memory\"}\n                />\n                <input\n\n                    type={\"text\"}\n                    onChange={handleText}\n                    name={\"condition\"}\n                    value={product.condition}\n                    placeholder={\"is item refurbished or brand new\"}\n                />\n\n                <input\n\n                    type={\"number\"}\n                    onChange={handleText}\n                    name={\"price\"}\n                    value={product.price}\n                    placeholder={\"how much item cost\"}\n                />\n\n                <input\n\n                    type={\"number\"}\n                    onChange={handleText}\n                    name={\"quantity\"}\n                    value={product.quantity}\n                    placeholder={\"how many items\"}\n                />\n                <br/>\n                <button\n                    className={\"post-btn border border-black w-2/4\"}\n                    type=\"submit\"\n                    disabled={!canSave}\n                >\n                    post\n                </button>\n            </form>\n        </article>\n    </section>);\n}\n"],"names":["FormErr","errors","Object","keys","map","name","idx","length","About","props","state","symbol","texts","UploadService","dispatch","useDispatch","useState","requestStatus","setRequestStatus","initialProducts","product","setProduct","rating","setRating","hover","setHover","files","setFiles","stars","Array","star","index","ratingValue","className","type","style","display","onClick","c","value","icon","faStar","color","onMouseEnter","onMouseLeave","handleText","e","target","canSave","every","Boolean","submit","fileArr","JSON","stringify","formData","FormData","append","brand","toLowerCase","title","software","year","rom","ram","condition","price","quantity","addProducts","unwrap","err","console","log","item","src","image","alt","onSubmit","encType","accept","onChange","reader","FileReader","onloadend","result","readAsDataURL","images","multiple","placeholder","disabled"],"sourceRoot":""}